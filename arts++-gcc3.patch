--- arts++-1-1-a9/apps/artsagg/artsagg.cc.orig	Sat Nov 16 01:46:38 2002
+++ arts++-1-1-a9/apps/artsagg/artsagg.cc	Fri Feb 13 16:15:31 2004
@@ -64,7 +64,7 @@
 #include "ArtsPackageVersion.hh"
 #include "ArtsDebug.hh"
 
-extern int   errno;
+using namespace std;
 
 const string rcsid = "@(#) $Name$ $Id$";
 static const ArtsPackageVersion  k_artsVersion = ArtsPackageVersion(rcsid);
--- arts++-1-1-a9/apps/artsases/artsases.cc.orig	Sat Nov 16 01:46:38 2002
+++ arts++-1-1-a9/apps/artsases/artsases.cc	Fri Feb 13 16:16:16 2004
@@ -71,6 +71,7 @@
   #include "ArtsDebug.hh"
 #endif
 
+using namespace std;
 
 extern char *tzname[2];
 
--- arts++-1-1-a9/apps/artsdump/artsdump.cc.orig	Sat Nov 16 01:46:38 2002
+++ arts++-1-1-a9/apps/artsdump/artsdump.cc	Fri Feb 13 16:16:45 2004
@@ -58,6 +58,8 @@
   #include "ArtsDebug.hh"
 #endif
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 static const ArtsPackageVersion  k_artsVersion = ArtsPackageVersion(rcsid);
 
--- arts++-1-1-a9/apps/artsintfms/artsintfms.cc.orig	Sat Nov 16 01:46:38 2002
+++ arts++-1-1-a9/apps/artsintfms/artsintfms.cc	Fri Feb 13 16:18:19 2004
@@ -63,6 +63,9 @@
   #include "ArtsDebug.hh"
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 const string rcsid = "@(#) $Name$ $Id$";
--- arts++-1-1-a9/apps/artsnets/artsnets.cc.orig	Sat Nov 16 01:46:38 2002
+++ arts++-1-1-a9/apps/artsnets/artsnets.cc	Fri Feb 13 16:25:36 2004
@@ -67,6 +67,9 @@
 #define INADDR_NONE 0xffffffff
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
@@ -160,7 +163,7 @@
     }
   }
   
-  if (hostAttribute) {
+  if (hostAttribute.base()) {
     inAddr.s_addr = hostAttribute->Host();
     cout << "router:  " << inet_ntoa(inAddr) << endl;
   }
--- arts++-1-1-a9/apps/artsnexthops/artsnexthops.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artsnexthops/artsnexthops.cc	Fri Feb 13 16:26:40 2004
@@ -63,6 +63,9 @@
   #include "ArtsDebug.hh"
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
@@ -116,7 +119,7 @@
     }
   }
   
-  if (hostAttribute) {
+  if (hostAttribute.base()) {
     inAddr.s_addr = hostAttribute->Host();
     cout << "router:  " << inet_ntoa(inAddr) << endl;
   }
@@ -135,7 +138,7 @@
   cout << endl;
   
   periodAttribute = arts.FindPeriodAttribute();
-  if (periodAttribute) {
+  if (periodAttribute.base()) {
     periodTimes[0] = periodAttribute->Period()[0];
     periodTimes[1] = periodAttribute->Period()[1];
     localTm = localtime(&(periodTimes[0]));
--- arts++-1-1-a9/apps/artsportms/artsportms.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artsportms/artsportms.cc	Fri Feb 13 16:27:29 2004
@@ -63,6 +63,9 @@
   #include "ArtsDebug.hh"
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 const string rcsid = "@(#) $Name$ $Id$";
--- arts++-1-1-a9/apps/artsports/artsports.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artsports/artsports.cc	Fri Feb 13 16:14:51 2004
@@ -64,6 +64,8 @@
   #include "ArtsDebug.hh"
 #endif
 
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
--- arts++-1-1-a9/apps/artsprotos/artsprotos.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artsprotos/artsprotos.cc	Fri Feb 13 16:28:36 2004
@@ -64,6 +64,9 @@
   #include "ArtsDebug.hh"
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
@@ -118,7 +121,7 @@
     }
   }
   
-  if (hostAttribute) {
+  if (hostAttribute.base()) {
     inAddr.s_addr = hostAttribute->Host();
     cout << "router:  " << inet_ntoa(inAddr) << endl;
   }
--- arts++-1-1-a9/apps/artstoc/artstoc.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artstoc/artstoc.cc	Fri Feb 13 16:29:24 2004
@@ -59,6 +59,8 @@
   #include "ArtsDebug.hh"
 #endif
 
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
--- arts++-1-1-a9/apps/artstos/artstos.cc.orig	Sat Nov 16 01:46:39 2002
+++ arts++-1-1-a9/apps/artstos/artstos.cc	Fri Feb 13 16:30:17 2004
@@ -64,6 +64,9 @@
   #include "ArtsDebug.hh"
 #endif
 
+#include <iterator>
+using namespace std;
+
 extern char *tzname[2];
 
 static const string rcsid = "@(#) $Name$ $Id$";
@@ -108,7 +111,7 @@
     }
   }
 
-  if (hostAttribute) {
+  if (hostAttribute.base()) {
     inAddr.s_addr = hostAttribute->Host();
     cout << "router:  " << inet_ntoa(inAddr) << endl;
   }
@@ -126,7 +129,7 @@
   }
   cout << endl;
   
-  if (periodAttribute) {
+  if (periodAttribute.base()) {
     periodTimes[0] = periodAttribute->Period()[0];
     periodTimes[1] = periodAttribute->Period()[1];
     localTm = localtime(&(periodTimes[0]));
--- arts++-1-1-a9/classes/include/ArtsNetMatrixData.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsNetMatrixData.hh	Fri Feb 13 15:13:23 2004
@@ -53,6 +53,8 @@
 
 #include "ArtsNetMatrixEntry.hh"
 
+using std::vector;
+
 //---------------------------------------------------------------------------
 //  class ArtsNetMatrixData
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPackageVersion.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPackageVersion.hh	Fri Feb 13 15:32:18 2004
@@ -45,6 +45,8 @@
 
 #include <string>
 
+using std::string;
+
 //---------------------------------------------------------------------------
 //  class ArtsPackageVersion
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortChooser.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortChooser.hh	Fri Feb 13 15:34:37 2004
@@ -51,6 +51,8 @@
 
 #include "ArtsPortChoice.hh"
 
+using std::vector;
+
 //---------------------------------------------------------------------------
 //  class ArtsPortChooser
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/Ipv4Network.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/Ipv4Network.hh	Fri Feb 13 14:56:39 2004
@@ -180,7 +180,7 @@
   //--------------------------------------------------------------------------
   istream & read(istream & is)
   {
-    is.read(&this->maskLen,sizeof(this->maskLen));
+    is.read((char*)&this->maskLen,sizeof(this->maskLen));
     uint8_t  octet1  = 0;
     uint8_t  octet2  = 0;
     uint8_t  octet3  = 0;
@@ -188,25 +188,25 @@
     
     switch (netSize) {
       case 1:
-        is.read(&octet1,sizeof(octet1));
+        is.read((char*)&octet1,sizeof(octet1));
         this->net = htonl((ipv4addr_t)octet1 << 24);
         break;
       case 2:
-        is.read(&octet1,sizeof(octet1));
-        is.read(&octet2,sizeof(octet2));
+        is.read((char*)&octet1,sizeof(octet1));
+        is.read((char*)&octet2,sizeof(octet2));
         this->net =
           htonl(((ipv4addr_t)octet1 << 24) | ((ipv4addr_t)octet2 << 16));
         break;
       case 3:
-        is.read(&octet1,sizeof(octet1));
-        is.read(&octet2,sizeof(octet2));
-        is.read(&octet3,sizeof(octet3));
+        is.read((char*)&octet1,sizeof(octet1));
+        is.read((char*)&octet2,sizeof(octet2));
+        is.read((char*)&octet3,sizeof(octet3));
         this->net = htonl(((ipv4addr_t)octet1 << 24) |
                           ((ipv4addr_t)octet2 << 16) |
                           ((ipv4addr_t)octet3 << 8));
         break;
       case 4:
-        is.read(&this->net,sizeof(this->net));
+        is.read((char*)&this->net,sizeof(this->net));
         break;
       default:
         break;
@@ -293,7 +293,7 @@
   ostream & write(ostream & os) const
   {
     //  first we write the netmask length
-    os.write(&this->maskLen,sizeof(this->maskLen));
+    os.write((char*)&this->maskLen,sizeof(this->maskLen));
     
     uint8_t  octet1 = 0;
     uint8_t  octet2 = 0;
@@ -305,26 +305,26 @@
     switch (netSize) {
       case 1:
         octet1 = ntohl(this->net) >> 24;
-        os.write(&octet1,sizeof(octet1));
+        os.write((char*)&octet1,sizeof(octet1));
         break;
       case 2:
         netaddr = ntohl(this->net);
         octet1 = (ipv4addr_t)(netaddr >> 24) & 0xff;
         octet2 = (ipv4addr_t)(netaddr >> 16) & 0xff;
-        os.write(&octet1,sizeof(octet1));
-        os.write(&octet2,sizeof(octet2));
+        os.write((char*)&octet1,sizeof(octet1));
+        os.write((char*)&octet2,sizeof(octet2));
         break;
       case 3:
         netaddr = ntohl(this->net);
         octet1 = (ipv4addr_t)(netaddr >> 24) & 0xff;
         octet2 = (ipv4addr_t)(netaddr >> 16) & 0xff;
         octet3 = (ipv4addr_t)(netaddr >> 8) & 0xff;
-        os.write(&octet1,sizeof(octet1));
-        os.write(&octet2,sizeof(octet2));
-        os.write(&octet3,sizeof(octet3));
+        os.write((char*)&octet1,sizeof(octet1));
+        os.write((char*)&octet2,sizeof(octet2));
+        os.write((char*)&octet3,sizeof(octet3));
         break;
       case 4:
-        os.write(&this->net,sizeof(this->net));
+        os.write((char*)&this->net,sizeof(this->net));
         break;
       default:
         break;
--- arts++-1-1-a9/classes/include/ArtsAsMatrixData.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsAsMatrixData.hh	Fri Feb 13 14:56:39 2004
@@ -49,9 +49,12 @@
 }
 
 #include <vector>
+using std::vector;
 
 #ifdef HAVE_IOSTREAM
   #include <iostream>
+  using std::istream;
+  using std::ostream;
 #else
   #include <iostream.h>
 #endif
--- arts++-1-1-a9/classes/include/ArtsAttribute.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsAttribute.hh	Fri Feb 13 14:56:39 2004
@@ -53,6 +53,8 @@
 #include <string>
 #include <istream.h>
 
+using std::string;
+
 //---------------------------------------------------------------------------
 //                 Object Attribute Identifiers               
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsIpPathEntry.hh.orig	Thu May 29 07:42:57 2003
+++ arts++-1-1-a9/classes/include/ArtsIpPathEntry.hh	Fri Feb 13 14:56:39 2004
@@ -54,6 +54,8 @@
 
 #ifdef HAVE_IOSTREAM
   #include <iostream>
+  using std::istream;
+  using std::ostream;
 #else
   #include <iostream.h>
 #endif
--- arts++-1-1-a9/classes/include/ArtsAttributeVector.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsAttributeVector.hh	Fri Feb 13 14:56:39 2004
@@ -47,6 +47,8 @@
 
 #include "ArtsAttribute.hh"
 
+using std::vector;
+
 //----------------------------------------------------------------------------
 //         class ArtsAttributeVector : public vector<ArtsAttribute> 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortChoice.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortChoice.hh	Fri Feb 13 14:56:39 2004
@@ -49,6 +49,8 @@
 
 #include <map>
 
+using std::pair;
+
 //---------------------------------------------------------------------------
 //  class ArtsPortChoice
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsSelection.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsSelection.hh	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 
 #include <map>
 
+using std::pair;
+
 //----------------------------------------------------------------------------
 //                          template <class Type> 
 //                          class ArtsSelection : pair<Type,Type> 
--- arts++-1-1-a9/classes/include/ArtsAsMatrixAggregator.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsAsMatrixAggregator.hh	Fri Feb 13 14:56:39 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsAsMatrix.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //----------------------------------------------------------------------------
 //     class ArtsAsMatrixKeyValue 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsBgp4AsPathSegment.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsBgp4AsPathSegment.hh	Fri Feb 13 14:56:39 2004
@@ -48,6 +48,7 @@
 }
 
 #include <vector>
+using std::vector;
 
 //---------------------------------------------------------------------------
 //  class ArtsBgp4AsPathSegment
--- arts++-1-1-a9/classes/include/ArtsProtocolTableAggregator.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsProtocolTableAggregator.hh	Fri Feb 13 14:56:39 2004
@@ -48,6 +48,9 @@
 
 #include "ArtsProtocolTable.hh"
 
+using std::map;
+using std::less;
+
 //---------------------------------------------------------------------------
 //  class ArtsProtocolTableAggregator
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/Ipv4PrefixPatricia.hh.in.orig	Sat Jan  4 01:57:31 2003
+++ arts++-1-1-a9/classes/include/Ipv4PrefixPatricia.hh.in	Fri Feb 13 15:02:51 2004
@@ -23,6 +23,9 @@
 
 #include "Ipv4Network.hh"
 
+#include <cassert>
+using std::pair;
+
 #undef WORDS_BIGENDIAN
 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortMatrixEntry.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortMatrixEntry.hh	Fri Feb 13 15:38:20 2004
@@ -51,6 +51,8 @@
 
 #ifdef HAVE_IOSTREAM
   #include <iostream>
+  using std::istream;
+  using std::ostream;
 #else
   #include <iostream.h>
 #endif
--- arts++-1-1-a9/classes/include/ArtsCflowdCustomData.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsCflowdCustomData.hh	Fri Feb 13 14:56:39 2004
@@ -20,6 +20,8 @@
 }
 
 #include <map>
+using std::map;
+using std::less;
 
 //----------------------------------------------------------------------------
 //                      class ArtsCflowdCustomDataKey 
--- arts++-1-1-a9/classes/include/ArtsSelectionSet.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsSelectionSet.hh	Fri Feb 13 14:56:39 2004
@@ -52,6 +52,8 @@
 
 #include "ArtsSelection.hh"
 
+using std::vector;
+
 //---------------------------------------------------------------------------
 //  template <class Type> class ArtsSelectionSet
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsInterfaceMatrixData.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsInterfaceMatrixData.hh	Fri Feb 13 15:05:18 2004
@@ -58,6 +58,8 @@
 
 #include "ArtsInterfaceMatrixEntry.hh"
 
+using std::vector;
+
 //---------------------------------------------------------------------------
 //  class ArtsInterfaceMatrixData
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsInterfaceMatrixAggregator.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsInterfaceMatrixAggregator.hh	Fri Feb 13 15:08:27 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsInterfaceMatrix.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //----------------------------------------------------------------------------
 //     class ArtsInterfaceMatrixKeyValue 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsNetMatrixEntry.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsNetMatrixEntry.hh	Fri Feb 13 15:10:59 2004
@@ -52,6 +52,8 @@
 
 #ifdef HAVE_IOSTREAM
   #include <iostream>
+  using std::istream;
+  using std::ostream;
 #else
   #include <iostream.h>
 #endif
--- arts++-1-1-a9/classes/include/ArtsNetMatrixAggregator.hh.orig	Sat Nov 16 01:46:40 2002
+++ arts++-1-1-a9/classes/include/ArtsNetMatrixAggregator.hh	Fri Feb 13 15:23:41 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsNetMatrix.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //----------------------------------------------------------------------------
 //     class ArtsNetMatrixKeyValue 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsNextHopTableAggregator.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsNextHopTableAggregator.hh	Fri Feb 13 15:29:41 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsNextHopTable.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //---------------------------------------------------------------------------
 //  class ArtsNextHopTableAggregator
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortMatrixAggregator.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortMatrixAggregator.hh	Fri Feb 13 15:35:45 2004
@@ -49,6 +49,10 @@
 #include "ArtsPortMatrix.hh"
 #include "ArtsSelectedPortTable.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //----------------------------------------------------------------------------
 //     class ArtsPortMatrixKeyValue 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortMatrixData.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortMatrixData.hh	Fri Feb 13 15:40:34 2004
@@ -59,6 +59,10 @@
 
 #include "ArtsPortMatrixEntry.hh"
 
+using std::vector;
+using std::istream;
+using std::ostream;
+
 //---------------------------------------------------------------------------
 //  class ArtsPortMatrixData
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsPortTableAggregator.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsPortTableAggregator.hh	Fri Feb 13 15:46:06 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsPortTable.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //---------------------------------------------------------------------------
 //  class ArtsPortTableAggregator
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsRttTimeSeriesTableData.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsRttTimeSeriesTableData.hh	Fri Feb 13 16:00:10 2004
@@ -51,6 +51,11 @@
 
 #include <vector>
 
+#include <iostream>
+using std::istream;
+using std::ostream;
+using std::vector;
+
 //----------------------------------------------------------------------------
 //                     class ArtsRttTimeSeriesTableEntry
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/include/ArtsTosTableAggregator.hh.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/include/ArtsTosTableAggregator.hh	Fri Feb 13 16:13:02 2004
@@ -48,6 +48,10 @@
 
 #include "ArtsTosTable.hh"
 
+using std::map;
+using std::vector;
+using std::less;
+
 //---------------------------------------------------------------------------
 //  class ArtsTosTableAggregator
 //---------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsBgp4Attribute.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4Attribute.cc	Fri Feb 13 14:56:39 2004
@@ -54,6 +54,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4Attribute.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -444,26 +446,26 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4Attribute::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4Attribute::read(istream & is, uint8_t version /* = 0 */)
 {
   uint8_t      numCommunities;
   uint32_t     community;
 
   this->DeleteValue();
   
-  is.read(&this->_flags,sizeof(this->_flags));
-  is.read(&this->_type,sizeof(this->_type));
+  is.read((char*)&this->_flags,sizeof(this->_flags));
+  is.read((char*)&this->_type,sizeof(this->_type));
   
   switch (this->_type) {
     case Bgp4_Attribute_Origin:
-      is.read(&this->_value._origin,sizeof(this->_value._origin));
+      is.read((char*)&this->_value._origin,sizeof(this->_value._origin));
       break;
     case Bgp4_Attribute_AsPath:
       this->_value._asPath = new ArtsBgp4AsPathAttribute;
       this->_value._asPath->read(is,version);
       break;
     case Bgp4_Attribute_NextHop:
-      is.read(&this->_value._nextHop,sizeof(this->_value._nextHop));
+      is.read((char*)&this->_value._nextHop,sizeof(this->_value._nextHop));
       break;
     case Bgp4_Attribute_MultiExitDisc:
       g_ArtsLibInternal_Primitive.ReadUint32(is,this->_value._MED,
@@ -480,7 +482,7 @@
       this->_value._aggregator->read(is,version);
       break;
     case Bgp4_Attribute_Community:
-      is.read(&numCommunities,sizeof(numCommunities));
+      is.read((char*)&numCommunities,sizeof(numCommunities));
       this->_value._community = new vector<uint32_t>;
       this->_value._community->reserve((int)numCommunities);
       for (int commNum = 0; commNum < numCommunities; commNum++) {
@@ -507,7 +509,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4Attribute::read(int fd, uint8_t version = 0)
+int ArtsBgp4Attribute::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t      numCommunities;
   uint32_t     community;
@@ -622,22 +624,22 @@
 //  
 //----------------------------------------------------------------------------
 ostream & ArtsBgp4Attribute::write(ostream & os,
-                                   uint8_t version = 0) const
+                                   uint8_t version /* = 0 */) const
 {
   uint8_t  numCommunities;
   
-  os.write(&this->_flags,sizeof(this->_flags));
-  os.write(&this->_type,sizeof(this->_type));
+  os.write((char*)&this->_flags,sizeof(this->_flags));
+  os.write((char*)&this->_type,sizeof(this->_type));
 
     switch (this->_type) {
     case Bgp4_Attribute_Origin:
-      os.write(&this->_value._origin,sizeof(this->_value._origin));
+      os.write((char*)&this->_value._origin,sizeof(this->_value._origin));
       break;
     case Bgp4_Attribute_AsPath:
       this->_value._asPath->write(os,version);
       break;
     case Bgp4_Attribute_NextHop:
-      os.write(&this->_value._nextHop,sizeof(this->_value._nextHop));
+      os.write((char*)&this->_value._nextHop,sizeof(this->_value._nextHop));
       break;
     case Bgp4_Attribute_MultiExitDisc:
       g_ArtsLibInternal_Primitive.WriteUint32(os,this->_value._MED,
@@ -654,7 +656,7 @@
       break;
     case Bgp4_Attribute_Community:
       numCommunities = this->_value._community->size();
-      os.write(&numCommunities,sizeof(numCommunities));
+      os.write((char*)&numCommunities,sizeof(numCommunities));
       for (int commNum = 0; commNum < numCommunities; commNum++) {
         g_ArtsLibInternal_Primitive.WriteUint32(os,
                                         (*(this->_value._community))[commNum],
@@ -680,7 +682,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4Attribute::write(int fd, uint8_t version = 0) const
+int ArtsBgp4Attribute::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t  numCommunities;
   int      rc;
@@ -855,7 +857,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint16_t ArtsBgp4Attribute::Length(uint8_t version = 0) const
+uint16_t ArtsBgp4Attribute::Length(uint8_t version /* = 0 */) const
 {
   uint16_t  length = sizeof(this->_flags) + sizeof(this->_type);
   switch (this->_type) {
--- arts++-1-1-a9/classes/src/ArtsBgp4DPAttribute.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4DPAttribute.cc	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4DPAttribute.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -132,7 +134,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4DPAttribute::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4DPAttribute::read(istream & is, uint8_t version /* = 0 */)
 {
   g_ArtsLibInternal_Primitive.ReadUint16(is,this->_as,sizeof(this->_as));
   g_ArtsLibInternal_Primitive.ReadUint32(is,this->_value,
@@ -145,7 +147,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4DPAttribute::read(int fd, uint8_t version = 0)
+int ArtsBgp4DPAttribute::read(int fd, uint8_t version /* = 0 */)
 {
   int   rc;
   int   bytesRead = 0;
@@ -169,7 +171,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-ostream & ArtsBgp4DPAttribute::write(ostream & os, uint8_t version = 0) const
+ostream & ArtsBgp4DPAttribute::write(ostream & os, uint8_t version /* = 0 */) const
 {
   g_ArtsLibInternal_Primitive.WriteUint16(os,this->_as,sizeof(this->_as));
   g_ArtsLibInternal_Primitive.WriteUint32(os,this->_value,
@@ -182,7 +184,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4DPAttribute::write(int fd, uint8_t version = 0) const
+int ArtsBgp4DPAttribute::write(int fd, uint8_t version /* = 0 */) const
 {
   int   rc;
   int   bytesWritten = 0;
--- arts++-1-1-a9/classes/src/ArtsBgp4AsPathAttribute.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4AsPathAttribute.cc	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4AsPathAttribute.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -117,7 +119,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4AsPathAttribute::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4AsPathAttribute::read(istream & is, uint8_t version /* = 0 */)
 {
   ArtsBgp4AsPathSegment  asPathSegment;
   uint8_t                numSegments;
@@ -125,7 +127,7 @@
   if (this->_segments.size() > 0)
     this->_segments.erase(this->_segments.begin(),this->_segments.end());
   
-  is.read(&numSegments,sizeof(numSegments));
+  is.read((char*)&numSegments,sizeof(numSegments));
   if (numSegments > 0) {
     this->_segments.reserve(numSegments);
     for (uint8_t segmentNum = 0; segmentNum < numSegments; segmentNum++) {
@@ -144,7 +146,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AsPathAttribute::read(int fd, uint8_t version = 0)
+int ArtsBgp4AsPathAttribute::read(int fd, uint8_t version /* = 0 */)
 {
   int                    rc;
   int                    bytesRead = 0;
@@ -175,10 +177,10 @@
 //  
 //----------------------------------------------------------------------------
 ostream & ArtsBgp4AsPathAttribute::write(ostream & os,
-                                         uint8_t version = 0) const
+                                         uint8_t version /* = 0 */) const
 {
   uint8_t                numSegments = this->_segments.size();
-  os.write(&numSegments,sizeof(numSegments));
+  os.write((char*)&numSegments,sizeof(numSegments));
   for (uint8_t segmentNum = 0; segmentNum < numSegments; segmentNum++) {
     this->_segments[segmentNum].write(os,version);
   }
@@ -190,7 +192,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AsPathAttribute::write(int fd, uint8_t version = 0) const
+int ArtsBgp4AsPathAttribute::write(int fd, uint8_t version /* = 0 */) const
 {
   int        rc;
   int        bytesWritten = 0;
@@ -232,7 +234,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsBgp4AsPathAttribute::Length(uint8_t version = 0) const
+uint32_t ArtsBgp4AsPathAttribute::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = sizeof(uint8_t);
 
--- arts++-1-1-a9/classes/src/ArtsBgp4AsPathSegment.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4AsPathSegment.cc	Fri Feb 13 14:56:39 2004
@@ -56,6 +56,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4AsPathSegment.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -137,13 +139,13 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4AsPathSegment::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4AsPathSegment::read(istream & is, uint8_t version /* = 0 */)
 {
   uint8_t   numAses;
   uint16_t  as;
 
-  is.read(&this->_type,sizeof(this->_type));
-  is.read(&numAses,sizeof(numAses));
+  is.read((char*)&this->_type,sizeof(this->_type));
+  is.read((char*)&numAses,sizeof(numAses));
   if (numAses > 0) {
     this->_AS.reserve(numAses);
     for (int asNum = 0; asNum < numAses; asNum++) {
@@ -160,7 +162,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AsPathSegment::read(int fd, uint8_t version = 0)
+int ArtsBgp4AsPathSegment::read(int fd, uint8_t version /* = 0 */)
 {
   int       rc;
   uint8_t   numAses;
@@ -196,12 +198,12 @@
 //  
 //----------------------------------------------------------------------------
 ostream & ArtsBgp4AsPathSegment::write(ostream & os,
-                                       uint8_t version = 0) const
+                                       uint8_t version /* = 0 */) const
 {
-  os.write(&this->_type,sizeof(this->_type));
+  os.write((char*)&this->_type,sizeof(this->_type));
   
   uint8_t   numAses = this->_AS.size();
-  os.write(&numAses,sizeof(numAses));
+  os.write((char*)&numAses,sizeof(numAses));
   
   for (int asNum = 0; asNum < numAses; asNum++) {
     g_ArtsLibInternal_Primitive.WriteUint16(os,this->_AS[asNum],
@@ -215,7 +217,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AsPathSegment::write(int fd, uint8_t version = 0) const
+int ArtsBgp4AsPathSegment::write(int fd, uint8_t version /* = 0 */) const
 {
   int       rc;
   uint8_t   numAses;
@@ -246,7 +248,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsBgp4AsPathSegment::Length(uint8_t version = 0) const
+uint32_t ArtsBgp4AsPathSegment::Length(uint8_t version /* = 0 */) const
 {
   return(sizeof(this->_type) + sizeof(uint8_t) +
          (sizeof(uint16_t) * this->_AS.size()));
--- arts++-1-1-a9/classes/src/ArtsFileUtil.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsFileUtil.cc	Fri Feb 13 14:56:39 2004
@@ -63,6 +63,9 @@
 #include "ArtsDebug.hh"
 #include "ArtsPackageVersion.hh"
 
+#include <iterator>
+using namespace std;
+
 typedef map<ArtsAggregatorMapKey,time_t,less<ArtsAggregatorMapKey> >  \
 IntervalStartMap_t;
 
--- arts++-1-1-a9/classes/src/ArtsAsMatrixEntry.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsAsMatrixEntry.cc	Fri Feb 13 14:56:39 2004
@@ -49,6 +49,8 @@
 #include "ArtsAsMatrixEntry.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -180,7 +182,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsAsMatrixEntry::Length(uint8_t version = 0) const
+uint32_t ArtsAsMatrixEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t   length;
 
@@ -197,14 +199,14 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream& ArtsAsMatrixEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsAsMatrixEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize,
                  pktsize,
                  srcsize,
                  dstsize;
   
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -224,7 +226,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsAsMatrixEntry::read(int fd, uint8_t version = 0)
+int ArtsAsMatrixEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize,
                  pktsize,
@@ -277,14 +279,14 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsAsMatrixEntry::write(ostream & os, uint8_t version = 0) const
+ostream & ArtsAsMatrixEntry::write(ostream & os, uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize,
                  pktsize,
                  srcsize,
                  dstsize;
 
-  os.write(&this->_descriptor,sizeof(this->_descriptor));
+  os.write((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -304,7 +306,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsAsMatrixEntry::write(int fd, uint8_t version = 0) const
+int ArtsAsMatrixEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize,
                  pktsize,
--- arts++-1-1-a9/classes/src/ArtsAsMatrix.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsAsMatrix.cc	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsAsMatrix.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsHeader.cc.orig	Mon Apr 28 22:02:55 2003
+++ arts++-1-1-a9/classes/src/ArtsHeader.cc	Fri Feb 13 14:56:39 2004
@@ -51,6 +51,8 @@
 #include "ArtsHeader.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 typedef struct {
   uint32_t     identifier;
   const char  *name;
@@ -135,23 +137,23 @@
   uint32_t  uIntDatum, idAndVersion;
   
   uShortDatum = htons(this->_magic);
-  os.write(&uShortDatum,sizeof(uShortDatum));
+  os.write((char*)&uShortDatum,sizeof(uShortDatum));
 
   idAndVersion = (this->_identifier << 4) | this->_version;
   uIntDatum = htonl(idAndVersion);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
   
   uIntDatum = htonl(this->_flags);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
   
   uShortDatum = htons(this->_numAttributes);
-  os.write(&uShortDatum,sizeof(uShortDatum));
+  os.write((char*)&uShortDatum,sizeof(uShortDatum));
   
   uIntDatum = htonl(this->_attrLength);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
   
   uIntDatum = htonl(this->_dataLength);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
 
   return(os);
 }
@@ -225,13 +227,13 @@
   uint32_t  uIntDatum;
   uint32_t  idAndVersion;
   
-  is.read(&uShortDatum,sizeof(uShortDatum));
+  is.read((char*)&uShortDatum,sizeof(uShortDatum));
   if (is.eof())
     return(is);
   
   this->_magic = ntohs(uShortDatum);
 
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   if (is.eof())
     return(is);
   
@@ -239,22 +241,22 @@
   this->_identifier = idAndVersion >> 4;
   this->_version    = idAndVersion & 0x0f;
 
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   if (is.eof())
     return(is);  
   this->_flags = ntohl(uIntDatum);
 
-  is.read(&uShortDatum,sizeof(uShortDatum));
+  is.read((char*)&uShortDatum,sizeof(uShortDatum));
   if (is.eof())
     return(is);
   this->_numAttributes = ntohs(uShortDatum);
 
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   if (is.eof())
     return(is);
   this->_attrLength = ntohl(uIntDatum);
 
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   if (is.eof())
     return(is);
   this->_dataLength = ntohl(uIntDatum);
--- arts++-1-1-a9/classes/src/ArtsAttribute.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsAttribute.cc	Fri Feb 13 14:56:39 2004
@@ -487,10 +487,10 @@
 
   idAndFormat = (this->_identifier << 8) | this->_format;
   uIntDatum = htonl(idAndFormat);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
 
   uIntDatum = htonl(this->_length);
-  os.write(&uIntDatum,sizeof(uIntDatum));
+  os.write((char*)&uIntDatum,sizeof(uIntDatum));
 
   switch (this->_identifier) {
     case artsC_ATTR_COMMENT:
@@ -499,16 +499,16 @@
       break;
     case artsC_ATTR_CREATION:
       uIntDatum = htonl(this->_value.creation);
-      os.write(&uIntDatum,sizeof(uIntDatum));
+      os.write((char*)&uIntDatum,sizeof(uIntDatum));
       break;
     case artsC_ATTR_PERIOD:
       uIntDatum = htonl(this->_value.period[0]);
-      os.write(&uIntDatum,sizeof(uIntDatum));
+      os.write((char*)&uIntDatum,sizeof(uIntDatum));
       uIntDatum = htonl(this->_value.period[1]);
-      os.write(&uIntDatum,sizeof(uIntDatum));
+      os.write((char*)&uIntDatum,sizeof(uIntDatum));
       break;
     case artsC_ATTR_HOST:
-      os.write(&this->_value.host,sizeof(this->_value.host));
+      os.write((char*)&this->_value.host,sizeof(this->_value.host));
       break;
     case artsC_ATTR_IFDESCR:
       ptr = this->_value.ifDescr->c_str();
@@ -516,14 +516,14 @@
       break;
     case artsC_ATTR_IFINDEX:
       uShortDatum = htons(this->_value.ifIndex);
-      os.write(&uShortDatum,sizeof(uShortDatum));
+      os.write((char*)&uShortDatum,sizeof(uShortDatum));
       break;
     case artsC_ATTR_IFIPADDR:
-      os.write(&this->_value.ifIpAddr,sizeof(this->_value.ifIpAddr));
+      os.write((char*)&this->_value.ifIpAddr,sizeof(this->_value.ifIpAddr));
       break;
     case artsC_ATTR_HOSTPAIR:
-      os.write(&(this->_value.hostPair[0]),sizeof(ipv4addr_t));
-      os.write(&(this->_value.hostPair[1]),sizeof(ipv4addr_t));
+      os.write((char*)&(this->_value.hostPair[0]),sizeof(ipv4addr_t));
+      os.write((char*)&(this->_value.hostPair[1]),sizeof(ipv4addr_t));
       break;
     default:
       break;
@@ -675,12 +675,12 @@
       break;
   }
   
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   idAndFormat = ntohl(uIntDatum);
   this->_identifier = idAndFormat >> 8;
   this->_format = idAndFormat & 0xff;
 
-  is.read(&uIntDatum,sizeof(uIntDatum));
+  is.read((char*)&uIntDatum,sizeof(uIntDatum));
   this->_length = ntohl(uIntDatum);
 
   switch (this->_identifier) {
@@ -693,17 +693,17 @@
       free(ptr);
       break;
     case artsC_ATTR_CREATION:
-      is.read(&uIntDatum,sizeof(uIntDatum));
+      is.read((char*)&uIntDatum,sizeof(uIntDatum));
       this->_value.creation = ntohl(uIntDatum);
       break;
     case artsC_ATTR_PERIOD:
-      is.read(&uIntDatum,sizeof(uIntDatum));
+      is.read((char*)&uIntDatum,sizeof(uIntDatum));
       this->_value.period[0] = htonl(uIntDatum);
-      is.read(&uIntDatum,sizeof(uIntDatum));
+      is.read((char*)&uIntDatum,sizeof(uIntDatum));
       this->_value.period[1] = htonl(uIntDatum);
       break;
     case artsC_ATTR_HOST:
-      is.read(&this->_value.host,sizeof(this->_value.host));
+      is.read((char*)&this->_value.host,sizeof(this->_value.host));
       break;
     case artsC_ATTR_IFDESCR:
       ptr = (char *)malloc(this->_length - (sizeof(uint32_t) * 2));
@@ -714,15 +714,15 @@
       free(ptr);
       break;
     case artsC_ATTR_IFINDEX:
-      is.read(&this->_value.ifIndex,sizeof(this->_value.ifIndex));
+      is.read((char*)&this->_value.ifIndex,sizeof(this->_value.ifIndex));
       this->_value.ifIndex = ntohs(this->_value.ifIndex);
       break;
     case artsC_ATTR_IFIPADDR:
-      is.read(&this->_value.ifIpAddr,sizeof(this->_value.ifIpAddr));
+      is.read((char*)&this->_value.ifIpAddr,sizeof(this->_value.ifIpAddr));
       break;
     case artsC_ATTR_HOSTPAIR:
-      is.read(&(this->_value.hostPair[0]),sizeof(ipv4addr_t));
-      is.read(&(this->_value.hostPair[1]),sizeof(ipv4addr_t));
+      is.read((char*)&(this->_value.hostPair[0]),sizeof(ipv4addr_t));
+      is.read((char*)&(this->_value.hostPair[1]),sizeof(ipv4addr_t));
       break;
     default:
       break;
--- arts++-1-1-a9/classes/src/ArtsIpPathEntry.cc.orig	Sun Jun  1 07:25:31 2003
+++ arts++-1-1-a9/classes/src/ArtsIpPathEntry.cc	Fri Feb 13 14:56:39 2004
@@ -52,6 +52,8 @@
 #include "ArtsIpPathEntry.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //------------------------------------------------------------------------
@@ -107,14 +109,14 @@
 }
 
 
-istream& ArtsIpPathEntry::read(istream& is, uint8_t version = 0,
-				uint8_t flags = 0)
+istream& ArtsIpPathEntry::read(istream& is, uint8_t version /* = 0 */,
+				uint8_t flags /* = 0 */)
 {
-  is.read(&this->_hopNum,sizeof(this->_hopNum));
+  is.read((char*)&this->_hopNum,sizeof(this->_hopNum));
   if (! is)
     return(is);
 
-  is.read(&this->_ipAddr,sizeof(this->_ipAddr));
+  is.read((char*)&this->_ipAddr,sizeof(this->_ipAddr));
   if (! is)
     return(is);
 
@@ -125,14 +127,14 @@
       if (! is)
 	return(is);
 
-      is.read(&this->_numTries,sizeof(this->_numTries));
+      is.read((char*)&this->_numTries,sizeof(this->_numTries));
     }
   }
   
   return(is);
 }
 
-int ArtsIpPathEntry::read(int fd, uint8_t version = 0, uint8_t flags = 0)
+int ArtsIpPathEntry::read(int fd, uint8_t version /* = 0 */, uint8_t flags /* = 0 */)
 {
   int rc;
   int bytesRead = 0;
@@ -169,24 +171,24 @@
   return(bytesRead);
 }
 
-ostream& ArtsIpPathEntry::write(ostream& os, uint8_t version = 0,
-				uint8_t flags = 0) const
+ostream& ArtsIpPathEntry::write(ostream& os, uint8_t version /* = 0 */,
+				uint8_t flags /* = 0 */) const
 {
-  os.write(&this->_hopNum,sizeof(this->_hopNum));
-  os.write(&this->_ipAddr,sizeof(this->_ipAddr));
+  os.write((char*)&this->_hopNum,sizeof(this->_hopNum));
+  os.write((char*)&this->_ipAddr,sizeof(this->_ipAddr));
 
   if (version >= 1) {
     // Version 1 always has iRTT.
     if (version == 1 || flags & k_rtt) {
       g_ArtsLibInternal_Primitive.WriteUint32(os, _rtt, sizeof(_rtt));
-      os.write(&this->_numTries,sizeof(this->_numTries));
+      os.write((char*)&this->_numTries,sizeof(this->_numTries));
     }
   }
 
   return(os);
 }
 
-int ArtsIpPathEntry::write(int fd, uint8_t version = 0, uint8_t flags = 0) const
+int ArtsIpPathEntry::write(int fd, uint8_t version /* = 0 */, uint8_t flags /* = 0 */) const
 {
   int  rc;
   int  bytesWritten = 0;
--- arts++-1-1-a9/classes/src/ArtsIpPathData.cc.orig	Sat Jun  7 02:05:09 2003
+++ arts++-1-1-a9/classes/src/ArtsIpPathData.cc	Fri Feb 13 15:00:39 2004
@@ -53,6 +53,8 @@
 #include "Arts.hh"
 #include "ArtsIpPathData.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 //------------------------------------------------------------------------
 //     ArtsIpPathData::ArtsIpPathData(ipv4addr_t src, ipv4addr_t dst)
@@ -189,7 +191,7 @@
   #endif
 }
 
-uint32_t ArtsIpPathData::Length(uint8_t version = 0, uint8_t flags = 0) const
+uint32_t ArtsIpPathData::Length(uint8_t version /* = 0 */, uint8_t flags /* = 0 */) const
 {
   uint32_t len =  sizeof(_src) + sizeof(_dst) + sizeof(_hopDistance) +
 		    sizeof(_numHops);
@@ -217,38 +219,38 @@
   return(len);
 }
 
-ostream& ArtsIpPathData::write(ostream& os, uint8_t version = 0,
-				uint8_t flags = 0)
+ostream& ArtsIpPathData::write(ostream& os, uint8_t version /* = 0 */,
+				uint8_t flags /* = 0 */)
 {
   uint32_t  timeDatum;
   uint8_t   repliedAndNumHops;
 
-  os.write(&this->_src,sizeof(this->_src));
-  os.write(&this->_dst,sizeof(this->_dst));
+  os.write((char*)&this->_src,sizeof(this->_src));
+  os.write((char*)&this->_dst,sizeof(this->_dst));
 
   if (version >= 2) {
     timeDatum = htonl(_rtt);
   } else {
     timeDatum = htonl(_rtt / 1000000);
-    os.write(&timeDatum,sizeof(timeDatum));
+    os.write((char*)&timeDatum,sizeof(timeDatum));
     timeDatum = htonl(_rtt % 1000000);
   }
-  os.write(&timeDatum,sizeof(timeDatum));
+  os.write((char*)&timeDatum,sizeof(timeDatum));
 
-  os.write(&this->_hopDistance,sizeof(this->_hopDistance));
+  os.write((char*)&this->_hopDistance,sizeof(this->_hopDistance));
   
   repliedAndNumHops = (this->_destinationReplied << 7) | this->_numHops;
-  os.write(&repliedAndNumHops,sizeof(repliedAndNumHops));
+  os.write((char*)&repliedAndNumHops,sizeof(repliedAndNumHops));
 
   if (version >= 1) {
     // Only version 1 has conditional reason codes.
     if (version != 1 || _destinationReplied) {
-      os.write(&_haltReason, sizeof(_haltReason));
-      os.write(&_haltReasonData, sizeof(_haltReasonData));
+      os.write((char*)&_haltReason, sizeof(_haltReason));
+      os.write((char*)&_haltReasonData, sizeof(_haltReasonData));
     }
   }
   if (version >= 2) {
-    os.write(&_replyTtl, sizeof(_replyTtl));
+    os.write((char*)&_replyTtl, sizeof(_replyTtl));
   }
 
   //  sort by hop number
@@ -263,7 +265,7 @@
   return(os);
 }
 
-int ArtsIpPathData::write(int fd, uint8_t version = 0, uint8_t flags = 0)
+int ArtsIpPathData::write(int fd, uint8_t version /* = 0 */, uint8_t flags /* = 0 */)
 {
   uint32_t  timeDatum;
   uint8_t   repliedAndNumHops;
@@ -352,40 +354,40 @@
   return(bytesWritten);
 }
 
-istream& ArtsIpPathData::read(istream& is, uint8_t version = 0,
-				uint8_t flags = 0)
+istream& ArtsIpPathData::read(istream& is, uint8_t version /* = 0 */,
+				uint8_t flags /* = 0 */)
 {
   uint32_t  timeDatum;
   uint8_t   repliedAndNumHops;
   size_t    hopNum;
   
-  is.read(&this->_src,sizeof(this->_src));
-  is.read(&this->_dst,sizeof(this->_dst));
+  is.read((char*)&this->_src,sizeof(this->_src));
+  is.read((char*)&this->_dst,sizeof(this->_dst));
 
-  is.read(&timeDatum,sizeof(timeDatum));
+  is.read((char*)&timeDatum,sizeof(timeDatum));
   if (version >= 2) {
     _rtt = ntohl(timeDatum);
   } else {
     _rtt = ntohl(timeDatum) * 1000000;
-    is.read(&timeDatum,sizeof(timeDatum));
+    is.read((char*)&timeDatum,sizeof(timeDatum));
     _rtt += ntohl(timeDatum);
   }
 
-  is.read(&this->_hopDistance,sizeof(this->_hopDistance));
+  is.read((char*)&this->_hopDistance,sizeof(this->_hopDistance));
   
-  is.read(&repliedAndNumHops,sizeof(repliedAndNumHops));
+  is.read((char*)&repliedAndNumHops,sizeof(repliedAndNumHops));
   this->_destinationReplied = repliedAndNumHops >> 7;
   this->_numHops = repliedAndNumHops & 0x7f;
 
   if (version >= 1) {
     // Only version 1 has conditional reason codes.
     if (version != 1 || _destinationReplied) {
-      is.read(&_haltReason, sizeof(_haltReason));
-      is.read(&_haltReasonData, sizeof(_haltReasonData));
+      is.read((char*)&_haltReason, sizeof(_haltReason));
+      is.read((char*)&_haltReasonData, sizeof(_haltReasonData));
     }
   }
   if (version >= 2) {
-    is.read(&_replyTtl, sizeof(_replyTtl));
+    is.read((char*)&_replyTtl, sizeof(_replyTtl));
   }
   
   if (this->_path.size() > 0) {
@@ -406,7 +408,7 @@
   return(is);
 }
 
-int ArtsIpPathData::read(int fd, uint8_t version = 0, uint8_t flags = 0)
+int ArtsIpPathData::read(int fd, uint8_t version /* = 0 */, uint8_t flags /* = 0 */)
 {
   uint32_t  timeDatum;
   uint8_t   repliedAndNumHops;
@@ -749,7 +751,7 @@
 //  
 //----------------------------------------------------------------------------
 void ArtsIpPathData::AddHop(ipv4addr_t ipAddr, uint8_t hopNum,
-                            const struct timeval & rtt, uint8_t numTries=-1)
+                            const struct timeval & rtt, uint8_t numTries /* =-1 */)
 {
   ArtsIpPathEntry  pathEntry(ipAddr,hopNum);
   pathEntry.Rtt(rtt);
--- arts++-1-1-a9/classes/src/ArtsAsMatrixData.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsAsMatrixData.cc	Fri Feb 13 14:56:39 2004
@@ -44,6 +44,8 @@
 #include "ArtsAsMatrixData.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -81,7 +83,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream & ArtsAsMatrixData::read(istream& is, uint8_t version = 0)
+istream & ArtsAsMatrixData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t           entryNum;
   ArtsAsMatrixEntry  asEntry;
@@ -106,7 +108,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsAsMatrixData::read(int fd, uint8_t version = 0)
+int ArtsAsMatrixData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t           entryNum;
   ArtsAsMatrixEntry  asEntry;
@@ -161,7 +163,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsAsMatrixData::write(ostream& os, uint8_t version = 0)
+ostream & ArtsAsMatrixData::write(ostream& os, uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
 
@@ -183,7 +185,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsAsMatrixData::write(int fd, uint8_t version = 0)
+int ArtsAsMatrixData::write(int fd, uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
   int            rc;
@@ -235,7 +237,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsAsMatrixData::Length(uint8_t version = 0) const
+uint32_t ArtsAsMatrixData::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = 0;
 
--- arts++-1-1-a9/classes/src/ArtsBitString.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBitString.cc	Fri Feb 13 14:56:39 2004
@@ -48,6 +48,8 @@
 
 #include "ArtsBitString.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsIpPath.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsIpPath.cc	Fri Feb 13 14:56:39 2004
@@ -46,6 +46,8 @@
 #include "Arts.hh"
 #include "ArtsIpPath.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsAsMatrixAggregatorMap.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsAsMatrixAggregatorMap.cc	Fri Feb 13 14:56:39 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsAsMatrixAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsBgp4AggregatorAttribute.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4AggregatorAttribute.cc	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4AggregatorAttribute.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -154,10 +156,10 @@
 //  
 //----------------------------------------------------------------------------
 istream & ArtsBgp4AggregatorAttribute::read(istream & is,
-                                            uint8_t version = 0)
+                                            uint8_t version /* = 0 */)
 {
   g_ArtsLibInternal_Primitive.ReadUint16(is,this->_AS,sizeof(this->_AS));
-  is.read(&this->_ipAddr,sizeof(this->_ipAddr));
+  is.read((char*)&this->_ipAddr,sizeof(this->_ipAddr));
   return(is);
 }
 
@@ -166,7 +168,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AggregatorAttribute::read(int fd, uint8_t version = 0)
+int ArtsBgp4AggregatorAttribute::read(int fd, uint8_t version /* = 0 */)
 {
   int  rc;
   int  bytesRead = 0;
@@ -190,10 +192,10 @@
 //
 //----------------------------------------------------------------------------
 ostream & ArtsBgp4AggregatorAttribute::write(ostream & os,
-                                             uint8_t version = 0) const
+                                             uint8_t version /* = 0 */) const
 {
   g_ArtsLibInternal_Primitive.WriteUint16(os,this->_AS,sizeof(this->_AS));
-  os.write(&this->_ipAddr,sizeof(this->_ipAddr));
+  os.write((char*)&this->_ipAddr,sizeof(this->_ipAddr));
   return(os);
 }
 
@@ -202,7 +204,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4AggregatorAttribute::write(int fd, uint8_t version = 0) const
+int ArtsBgp4AggregatorAttribute::write(int fd, uint8_t version /* = 0 */) const
 {
   int  rc;
   int  bytesWritten = 0;
@@ -225,7 +227,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsBgp4AggregatorAttribute::Length(uint8_t version = 0) const
+uint32_t ArtsBgp4AggregatorAttribute::Length(uint8_t version /* = 0 */) const
 {
   return(sizeof(this->_AS) + sizeof(this->_ipAddr));
 }
--- arts++-1-1-a9/classes/src/ArtsBgp4Prefix.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4Prefix.cc	Fri Feb 13 14:56:39 2004
@@ -48,6 +48,8 @@
 
 #include "ArtsBgp4Prefix.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsBgp4RouteEntry.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4RouteEntry.cc	Fri Feb 13 14:56:39 2004
@@ -44,6 +44,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4RouteEntry.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -122,7 +124,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4RouteEntry::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4RouteEntry::read(istream & is, uint8_t version /* = 0 */)
 {
   ArtsBgp4Attribute  bgp4Attribute;
 
@@ -186,7 +188,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4RouteEntry::read(int fd, uint8_t version = 0)
+int ArtsBgp4RouteEntry::read(int fd, uint8_t version /* = 0 */)
 {
   int                rc;
   ArtsBgp4Attribute  bgp4Attribute;
@@ -291,7 +293,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-ostream & ArtsBgp4RouteEntry::write(ostream & os, uint8_t version = 0) const
+ostream & ArtsBgp4RouteEntry::write(ostream & os, uint8_t version /* = 0 */) const
 {
   g_ArtsLibInternal_Primitive.WriteUint32(os,this->_attrIndex,
                                           sizeof(this->_attrIndex));
@@ -309,7 +311,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4RouteEntry::write(int fd, uint8_t version = 0) const
+int ArtsBgp4RouteEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   int   rc;
   int   bytesWritten = 0;
@@ -337,7 +339,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsBgp4RouteEntry::Length(uint8_t version = 0) const
+uint32_t ArtsBgp4RouteEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = sizeof(this->_attrIndex);
   vector<ArtsBgp4Attribute>::const_iterator  bgp4AttrIter;
--- arts++-1-1-a9/classes/src/ArtsBgp4RouteTableData.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4RouteTableData.cc	Fri Feb 13 14:56:39 2004
@@ -45,6 +45,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsBgp4RouteTableData.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -114,7 +116,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsBgp4RouteTableData::read(istream & is, uint8_t version = 0)
+istream & ArtsBgp4RouteTableData::read(istream & is, uint8_t version /* = 0 */)
 {
   uint32_t            numRoutes;
   ArtsBgp4RouteEntry  routeEntry;
@@ -134,7 +136,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4RouteTableData::read(int fd, uint8_t version = 0)
+int ArtsBgp4RouteTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numRoutes;
   ArtsBgp4RouteEntry  routeEntry;
@@ -165,7 +167,7 @@
 //  
 //----------------------------------------------------------------------------
 ostream & ArtsBgp4RouteTableData::write(ostream & os,
-                                        uint8_t version = 0) const
+                                        uint8_t version /* = 0 */) const
 {
   Ipv4PrefixPatricia<ArtsBgp4RouteEntry>::iterator  routeIter;
 
@@ -185,7 +187,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsBgp4RouteTableData::write(int fd, uint8_t version = 0) const
+int ArtsBgp4RouteTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   Ipv4PrefixPatricia<ArtsBgp4RouteEntry>::iterator  routeIter;
   int    rc;
@@ -216,7 +218,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsBgp4RouteTableData::Length(uint8_t version = 0) const
+uint32_t ArtsBgp4RouteTableData::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = sizeof(uint32_t);
   Ipv4PrefixPatricia<ArtsBgp4RouteEntry>::iterator  routeIter;
--- arts++-1-1-a9/classes/src/ArtsBgp4RouteTable.cc.orig	Sat Nov 16 01:46:41 2002
+++ arts++-1-1-a9/classes/src/ArtsBgp4RouteTable.cc	Fri Feb 13 14:56:39 2004
@@ -43,6 +43,8 @@
 #include <string>
 #include "ArtsBgp4RouteTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsIfIndexSelectionSet.lex.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsIfIndexSelectionSet.lex	Fri Feb 13 14:56:39 2004
@@ -57,6 +57,8 @@
 
 #include "ArtsIfIndexSelectionSet.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 %}
--- arts++-1-1-a9/classes/src/ArtsInterfaceMatrixEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsInterfaceMatrixEntry.cc	Fri Feb 13 14:56:39 2004
@@ -214,7 +214,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsInterfaceMatrixEntry::Length(uint8_t version = 0) const
+uint32_t ArtsInterfaceMatrixEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t   length;
   length = (sizeof(this->_descriptor) +
@@ -231,11 +231,11 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-istream & ArtsInterfaceMatrixEntry::read(istream& is, uint8_t version = 0)
+istream & ArtsInterfaceMatrixEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize, pktsize, srcsize, dstsize;
 
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
   
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -255,7 +255,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsInterfaceMatrixEntry::read(int fd, uint8_t version = 0)
+int ArtsInterfaceMatrixEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize, pktsize, srcsize, dstsize;
   int            rc;
@@ -307,11 +307,11 @@
 //  
 //-------------------------------------------------------------------------
 ostream & ArtsInterfaceMatrixEntry::write(ostream& os,
-                                          uint8_t version = 0) const
+                                          uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize, pktsize, srcsize, dstsize;
 
-  os.write(&this->_descriptor,sizeof(this->_descriptor));
+  os.write((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -331,7 +331,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsInterfaceMatrixEntry::write(int fd, uint8_t version = 0) const
+int ArtsInterfaceMatrixEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize, pktsize, srcsize, dstsize;
   int            rc;
--- arts++-1-1-a9/classes/src/ArtsPortChoice.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortChoice.cc	Fri Feb 13 15:33:17 2004
@@ -49,6 +49,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsPortChoice.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -293,7 +295,7 @@
 {
   uint8_t   portLength;
 
-  is.read(&this->_flags,sizeof(this->_flags));
+  is.read((char*)&this->_flags,sizeof(this->_flags));
   if (!is)
     return(is);
   
@@ -364,7 +366,7 @@
 {
   uint8_t  portLength;
   
-  os.write(&this->_flags,sizeof(this->_flags));
+  os.write((char*)&this->_flags,sizeof(this->_flags));
 
   portLength = 1;
   if (this->_flags & this->k_firstPortLengthMask)
--- arts++-1-1-a9/classes/src/ArtsPortChooser.lex.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortChooser.lex	Fri Feb 13 15:35:00 2004
@@ -52,6 +52,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsPortChooser.hh"
 
+using namespace std;
+
 extern char *portchoosertext;
 
 static const string rcsid = "@(#) $Name$ $Id$";
@@ -233,7 +235,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsPortChooser::Length(uint8_t version = 0) const
+uint32_t ArtsPortChooser::Length(uint8_t version /* = 0 */) const
 {
   uint32_t                                length = 0;
   vector<ArtsPortChoice>::const_iterator  choiceIter;
--- arts++-1-1-a9/classes/src/ArtsInterfaceMatrixData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsInterfaceMatrixData.cc	Fri Feb 13 15:06:47 2004
@@ -44,6 +44,8 @@
 #include "ArtsInterfaceMatrixData.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -81,7 +83,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream & ArtsInterfaceMatrixData::read(istream& is, uint8_t version = 0)
+istream & ArtsInterfaceMatrixData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t                  entryNum;
   ArtsInterfaceMatrixEntry  interfaceEntry;
@@ -106,7 +108,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsInterfaceMatrixData::read(int fd, uint8_t version = 0)
+int ArtsInterfaceMatrixData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t                  entryNum;
   //  ArtsPrimitive             ioHelper;
@@ -163,7 +165,7 @@
 //                                                                         
 //-------------------------------------------------------------------------
 ostream & ArtsInterfaceMatrixData::write(ostream& os,
-                                         uint8_t version = 0)
+                                         uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
 
@@ -185,7 +187,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsInterfaceMatrixData::write(int fd, uint8_t version = 0)
+int ArtsInterfaceMatrixData::write(int fd, uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
   int            rc;
@@ -237,7 +239,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsInterfaceMatrixData::Length(uint8_t version = 0) const
+uint32_t ArtsInterfaceMatrixData::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = 0;
 
--- arts++-1-1-a9/classes/src/ArtsInterfaceMatrix.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsInterfaceMatrix.cc	Fri Feb 13 15:07:21 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsInterfaceMatrix.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsNextHopTableAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNextHopTableAggregatorMap.cc	Fri Feb 13 15:30:31 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsNextHopTableAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsInterfaceMatrixAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsInterfaceMatrixAggregatorMap.cc	Fri Feb 13 15:10:12 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsInterfaceMatrixAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsPortMatrixEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortMatrixEntry.cc	Fri Feb 13 15:39:47 2004
@@ -49,6 +49,8 @@
 #include "ArtsPortMatrixEntry.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -176,7 +178,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsPortMatrixEntry::Length(uint8_t version = 0) const
+uint32_t ArtsPortMatrixEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t   length;
 
@@ -193,14 +195,14 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream& ArtsPortMatrixEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsPortMatrixEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize,
                  pktsize,
                  srcsize,
                  dstsize;
   
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -220,7 +222,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsPortMatrixEntry::read(int fd, uint8_t version = 0)
+int ArtsPortMatrixEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t        bytesize,
                  pktsize,
@@ -273,14 +275,14 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsPortMatrixEntry::write(ostream & os, uint8_t version = 0) const
+ostream & ArtsPortMatrixEntry::write(ostream & os, uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize,
                  pktsize,
                  srcsize,
                  dstsize;
 
-  os.write(&this->_descriptor,sizeof(this->_descriptor));
+  os.write((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   srcsize = (this->_descriptor & 0x01) + 1;
   dstsize  = ((this->_descriptor >> 1) & 0x01) + 1;
@@ -300,7 +302,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsPortMatrixEntry::write(int fd, uint8_t version = 0) const
+int ArtsPortMatrixEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t        bytesize,
                  pktsize,
--- arts++-1-1-a9/classes/src/ArtsNetMatrixEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNetMatrixEntry.cc	Fri Feb 13 15:12:50 2004
@@ -53,6 +53,8 @@
 #include "ArtsNetMatrixEntry.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -186,7 +188,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsNetMatrixEntry::Length(uint8_t version = 2) const
+uint32_t ArtsNetMatrixEntry::Length(uint8_t version /* = 2 */) const
 {
   uint32_t   length;
 
@@ -203,7 +205,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream& ArtsNetMatrixEntry::read(istream& is, uint8_t version = 2)
+istream& ArtsNetMatrixEntry::read(istream& is, uint8_t version /* = 2 */)
 {
   uint8_t        bytesize,
                  pktsize,
@@ -212,7 +214,7 @@
                  dstsize,
                  dstmasklen;
   
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
   this->_descriptor = ntohs(this->_descriptor);
   
   srcmasklen = ((this->_descriptor >> 5) & 0x1f) + 1;
@@ -237,7 +239,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsNetMatrixEntry::read(int fd, uint8_t version = 2)
+int ArtsNetMatrixEntry::read(int fd, uint8_t version /* = 2 */)
 {
   uint8_t        bytesize,
                  pktsize,
@@ -298,7 +300,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsNetMatrixEntry::write(ostream & os, uint8_t version = 2) const
+ostream & ArtsNetMatrixEntry::write(ostream & os, uint8_t version /* = 2 */) const
 {
   uint8_t        bytesize,
                  pktsize,
@@ -309,7 +311,7 @@
   uint16_t       tmpDescriptor;
 
   tmpDescriptor = htons(this->_descriptor);
-  os.write(&tmpDescriptor,sizeof(tmpDescriptor));
+  os.write((char*)&tmpDescriptor,sizeof(tmpDescriptor));
 
   srcmasklen = ((this->_descriptor >> 5) & 0x1f) + 1;
   srcsize = (srcmasklen + 7) / 8;
@@ -333,7 +335,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsNetMatrixEntry::write(int fd, uint8_t version = 2) const
+int ArtsNetMatrixEntry::write(int fd, uint8_t version /* = 2 */) const
 {
   uint8_t        bytesize,
                  pktsize,
--- arts++-1-1-a9/classes/src/ArtsNetMatrixData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNetMatrixData.cc	Fri Feb 13 15:14:32 2004
@@ -46,6 +46,8 @@
 #include "ArtsNetMatrixData.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -83,7 +85,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream & ArtsNetMatrixData::read(istream& is, uint8_t version = 2)
+istream & ArtsNetMatrixData::read(istream& is, uint8_t version /* = 2 */)
 {
   uint32_t           entryNum;
   ArtsNetMatrixEntry  netEntry;
@@ -108,7 +110,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsNetMatrixData::read(int fd, uint8_t version = 2)
+int ArtsNetMatrixData::read(int fd, uint8_t version /* = 2 */)
 {
   uint32_t           entryNum;
   ArtsNetMatrixEntry  netEntry;
@@ -163,7 +165,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsNetMatrixData::write(ostream& os, uint8_t version = 2)
+ostream & ArtsNetMatrixData::write(ostream& os, uint8_t version /* = 2 */)
 {
   uint32_t       entryNum;
 
@@ -185,7 +187,7 @@
 //.........................................................................
 //
 //-------------------------------------------------------------------------
-int ArtsNetMatrixData::write(int fd, uint8_t version = 2)
+int ArtsNetMatrixData::write(int fd, uint8_t version /* = 2 */)
 {
   uint32_t       entryNum;
   int            rc;
@@ -237,7 +239,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsNetMatrixData::Length(uint8_t version = 2) const
+uint32_t ArtsNetMatrixData::Length(uint8_t version /* = 2 */) const
 {
   uint32_t  length = 0;
 
--- arts++-1-1-a9/classes/src/ArtsNetMatrix.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNetMatrix.cc	Fri Feb 13 15:18:27 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsNetMatrix.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsPortTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortTable.cc	Fri Feb 13 15:45:15 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsPortTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsNetMatrixAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNetMatrixAggregatorMap.cc	Fri Feb 13 15:25:12 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsNetMatrixAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsNextHopTableEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNextHopTableEntry.cc	Fri Feb 13 15:26:48 2004
@@ -54,6 +54,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsNextHopTableEntry.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -192,7 +194,7 @@
 //-------------------------------------------------------------------------
 //   uint32_t ArtsNextHopTableEntry::Length(uint8_t version = 0) const
 //-------------------------------------------------------------------------
-uint32_t ArtsNextHopTableEntry::Length(uint8_t version = 0) const
+uint32_t ArtsNextHopTableEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  len = 0;
 
@@ -207,15 +209,15 @@
 //-------------------------------------------------------------------------
 // istream& ArtsNextHopTableEntry::read(istream& is, uint8_t version = 0)
 //-------------------------------------------------------------------------
-istream& ArtsNextHopTableEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsNextHopTableEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
 
   //  IP address
-  is.read(&this->_ipAddr,sizeof(this->_ipAddr));
+  is.read((char*)&this->_ipAddr,sizeof(this->_ipAddr));
   
   //  descriptor
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -231,7 +233,7 @@
 //-------------------------------------------------------------------------
 //      int ArtsNextHopTableEntry::read(int fd, uint8_t version = 0)
 //-------------------------------------------------------------------------
-int ArtsNextHopTableEntry::read(int fd, uint8_t version = 0)
+int ArtsNextHopTableEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
   int      rc = 0;
@@ -262,15 +264,15 @@
 //                                           uint8_t version = 0) const
 //-------------------------------------------------------------------------
 ostream& ArtsNextHopTableEntry::write(ostream& os,
-                                       uint8_t version = 0) const
+                                       uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
 
   //  IP address
-  os.write(&this->_ipAddr,sizeof(this->_ipAddr));
+  os.write((char*)&this->_ipAddr,sizeof(this->_ipAddr));
   
   //  descriptor
-  os.write(&this->_descriptor,1);
+  os.write((char*)&this->_descriptor,1);
   
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -286,7 +288,7 @@
 //-------------------------------------------------------------------------
 //  int ArtsNextHopTableEntry::write(int fd, uint8_t version = 0) const
 //-------------------------------------------------------------------------
-int ArtsNextHopTableEntry::write(int fd, uint8_t version = 0) const
+int ArtsNextHopTableEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
   int      rc = 0;
--- arts++-1-1-a9/classes/src/ArtsPortMatrixData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortMatrixData.cc	Fri Feb 13 15:41:46 2004
@@ -44,6 +44,8 @@
 #include "ArtsPortMatrixData.hh"
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 
@@ -82,7 +84,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-istream & ArtsPortMatrixData::read(istream& is, uint8_t version = 0)
+istream & ArtsPortMatrixData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t             entryNum;
   ArtsPortMatrixEntry  portEntry;
@@ -107,7 +109,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsPortMatrixData::read(int fd, uint8_t version = 0)
+int ArtsPortMatrixData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t             entryNum;
   ArtsPortMatrixEntry  portEntry;
@@ -162,7 +164,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-ostream & ArtsPortMatrixData::write(ostream& os, uint8_t version = 0)
+ostream & ArtsPortMatrixData::write(ostream& os, uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
 
@@ -184,7 +186,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-int ArtsPortMatrixData::write(int fd, uint8_t version = 0)
+int ArtsPortMatrixData::write(int fd, uint8_t version /* = 0 */)
 {
   uint32_t       entryNum;
   int            rc;
@@ -236,7 +238,7 @@
 //.........................................................................
 //                                                                         
 //-------------------------------------------------------------------------
-uint32_t ArtsPortMatrixData::Length(uint8_t version = 0) const
+uint32_t ArtsPortMatrixData::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  length = 0;
 
--- arts++-1-1-a9/classes/src/ArtsNextHopTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNextHopTableData.cc	Fri Feb 13 15:28:26 2004
@@ -182,7 +182,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsNextHopTableData::ComputeLength(uint8_t version = 0) const
+uint32_t ArtsNextHopTableData::ComputeLength(uint8_t version /* = 0 */) const
 {
   this->_length = 0;
   
@@ -205,7 +205,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsNextHopTableData::Length(uint8_t version = 0) const
+uint32_t ArtsNextHopTableData::Length(uint8_t version /* = 0 */) const
 {
   this->ComputeLength(version);
   return(this->_length);
@@ -216,7 +216,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-istream& ArtsNextHopTableData::read(istream& is, uint8_t version = 0)
+istream& ArtsNextHopTableData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t            numNextHops;
   uint32_t            NextHopNum;
@@ -239,7 +239,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsNextHopTableData::read(int fd, uint8_t version = 0)
+int ArtsNextHopTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numNextHops;
   uint32_t            NextHopNum;
@@ -281,7 +281,7 @@
 //  
 //-------------------------------------------------------------------------
 ostream& ArtsNextHopTableData::write(ostream& os,
-                                      uint8_t version = 0) const
+                                      uint8_t version /* = 0 */) const
 {
   uint32_t            numNextHops;
   
@@ -306,7 +306,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsNextHopTableData::write(int fd, uint8_t version = 0) const
+int ArtsNextHopTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t      numNextHops;
   int           rc;
--- arts++-1-1-a9/classes/src/ArtsNextHopTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsNextHopTable.cc	Fri Feb 13 15:28:54 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsNextHopTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsObjectTypeSelectionSet.lex.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsObjectTypeSelectionSet.lex	Fri Feb 13 15:31:23 2004
@@ -56,6 +56,8 @@
 #include "ArtsHeader.hh"
 #include "ArtsObjectTypeSelectionSet.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 %}
 
--- arts++-1-1-a9/classes/src/ArtsPortMatrixAggregator.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortMatrixAggregator.cc	Fri Feb 13 15:36:17 2004
@@ -327,7 +327,7 @@
 //----------------------------------------------------------------------------
 ArtsSelectedPortTable *
 ArtsPortMatrixAggregator::
-ConvertToArtsSelectedPortTable(int numTopPorts, bool byPkts = false) const
+ConvertToArtsSelectedPortTable(int numTopPorts, bool byPkts /* = false */) const
 {
   ArtsPortTableEntry  portEntry;
   map<ArtsPortMatrixKeyValue,counter_t,less<ArtsPortMatrixKeyValue> >::const_iterator  portCounter;
--- arts++-1-1-a9/classes/src/ArtsPortMatrixAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortMatrixAggregatorMap.cc	Fri Feb 13 15:37:29 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsPortMatrixAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsPortMatrix.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortMatrix.cc	Fri Feb 13 15:42:11 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsPortMatrix.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsPortTableEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortTableEntry.cc	Fri Feb 13 15:43:43 2004
@@ -51,6 +51,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsPortTableEntry.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -332,7 +334,7 @@
 //-------------------------------------------------------------------------
 //      uint32_t ArtsPortTableEntry::Length(uint8_t version = 0) const
 //-------------------------------------------------------------------------
-uint32_t ArtsPortTableEntry::Length(uint8_t version = 0) const
+uint32_t ArtsPortTableEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  len = 0;
 
@@ -349,7 +351,7 @@
 //-------------------------------------------------------------------------
 //   istream& ArtsPortTableEntry::read(istream& is, uint8_t version = 0)
 //-------------------------------------------------------------------------
-istream& ArtsPortTableEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsPortTableEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
 
@@ -358,7 +360,7 @@
                                          sizeof(this->_portNum));
   
   //  descriptor
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   //  inPkts
   fieldLen = 1 << (this->_descriptor >> 6);
@@ -382,7 +384,7 @@
 //-------------------------------------------------------------------------
 //        int ArtsPortTableEntry::read(int fd, uint8_t version = 0)
 //-------------------------------------------------------------------------
-int ArtsPortTableEntry::read(int fd, uint8_t version = 0)
+int ArtsPortTableEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
   int      rc = 0;
@@ -421,7 +423,7 @@
 //                                        uint8_t version = 0) const          
 //-------------------------------------------------------------------------
 ostream& ArtsPortTableEntry::write(ostream& os,
-                                   uint8_t version = 0) const
+                                   uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
 
@@ -430,7 +432,7 @@
                                           sizeof(this->_portNum));
   
   //  descriptor
-  os.write(&this->_descriptor,1);
+  os.write((char*)&this->_descriptor,1);
   
   //  inPkts
   fieldLen = 1 << (this->_descriptor >> 6);
@@ -454,7 +456,7 @@
 //-------------------------------------------------------------------------
 //    int ArtsPortTableEntry::write(int fd, uint8_t version = 0) const
 //-------------------------------------------------------------------------
-int ArtsPortTableEntry::write(int fd, uint8_t version = 0) const
+int ArtsPortTableEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
   int      rc = 0;
--- arts++-1-1-a9/classes/src/ArtsPortTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPortTableData.cc	Fri Feb 13 15:44:48 2004
@@ -182,7 +182,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsPortTableData::ComputeLength(uint8_t version = 0) const
+uint32_t ArtsPortTableData::ComputeLength(uint8_t version /* = 0 */) const
 {
   this->_length = 0;
   
@@ -205,7 +205,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsPortTableData::Length(uint8_t version = 0) const
+uint32_t ArtsPortTableData::Length(uint8_t version /* = 0 */) const
 {
   this->ComputeLength(version);
   return(this->_length);
@@ -216,7 +216,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-istream& ArtsPortTableData::read(istream& is, uint8_t version = 0)
+istream& ArtsPortTableData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t            numPorts;
   uint32_t            portNum;
@@ -239,7 +239,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsPortTableData::read(int fd, uint8_t version = 0)
+int ArtsPortTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numPorts;
   uint32_t            portNum;
@@ -281,7 +281,7 @@
 //  
 //-------------------------------------------------------------------------
 ostream& ArtsPortTableData::write(ostream& os,
-                                  uint8_t version = 0) const
+                                  uint8_t version /* = 0 */) const
 {
   uint32_t                                    numPorts;
   vector<ArtsPortTableEntry>::const_iterator  portEntry;
@@ -305,7 +305,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsPortTableData::write(int fd, uint8_t version = 0) const
+int ArtsPortTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t      numPorts;
   int           rc;
--- arts++-1-1-a9/classes/src/ArtsProtocolTableEntry.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsProtocolTableEntry.cc	Fri Feb 13 15:48:08 2004
@@ -51,6 +51,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsProtocolTableEntry.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -189,7 +191,7 @@
 //-------------------------------------------------------------------------
 //   uint32_t ArtsProtocolTableEntry::Length(uint8_t version = 0) const
 //-------------------------------------------------------------------------
-uint32_t ArtsProtocolTableEntry::Length(uint8_t version = 0) const
+uint32_t ArtsProtocolTableEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  len = 0;
 
@@ -204,15 +206,15 @@
 //-------------------------------------------------------------------------
 // istream& ArtsProtocolTableEntry::read(istream& is, uint8_t version = 0)
 //-------------------------------------------------------------------------
-istream& ArtsProtocolTableEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsProtocolTableEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
 
   //  protocol number
-  is.read(&this->_protocolNum,sizeof(this->_protocolNum));
+  is.read((char*)&this->_protocolNum,sizeof(this->_protocolNum));
   
   //  descriptor
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -228,7 +230,7 @@
 //-------------------------------------------------------------------------
 //      int ArtsProtocolTableEntry::read(int fd, uint8_t version = 0)
 //-------------------------------------------------------------------------
-int ArtsProtocolTableEntry::read(int fd, uint8_t version = 0)
+int ArtsProtocolTableEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
   int      rc = 0;
@@ -259,15 +261,15 @@
 //                                           uint8_t version = 0) const
 //-------------------------------------------------------------------------
 ostream& ArtsProtocolTableEntry::write(ostream& os,
-                                       uint8_t version = 0) const
+                                       uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
 
   //  protocol number
-  os.write(&this->_protocolNum,sizeof(this->_protocolNum));
+  os.write((char*)&this->_protocolNum,sizeof(this->_protocolNum));
   
   //  descriptor
-  os.write(&this->_descriptor,1);
+  os.write((char*)&this->_descriptor,1);
   
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -283,7 +285,7 @@
 //-------------------------------------------------------------------------
 //  int ArtsProtocolTableEntry::write(int fd, uint8_t version = 0) const
 //-------------------------------------------------------------------------
-int ArtsProtocolTableEntry::write(int fd, uint8_t version = 0) const
+int ArtsProtocolTableEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
   int      rc = 0;
--- arts++-1-1-a9/classes/src/ArtsProtocolTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsProtocolTableData.cc	Fri Feb 13 15:49:15 2004
@@ -182,7 +182,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsProtocolTableData::ComputeLength(uint8_t version = 0) const
+uint32_t ArtsProtocolTableData::ComputeLength(uint8_t version /* = 0 */) const
 {
   this->_length = 0;
   
@@ -205,7 +205,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsProtocolTableData::Length(uint8_t version = 0) const
+uint32_t ArtsProtocolTableData::Length(uint8_t version /* = 0 */) const
 {
   this->ComputeLength(version);
   return(this->_length);
@@ -216,7 +216,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-istream& ArtsProtocolTableData::read(istream& is, uint8_t version = 0)
+istream& ArtsProtocolTableData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t            numProtocols;
   uint32_t            protocolNum;
@@ -239,7 +239,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsProtocolTableData::read(int fd, uint8_t version = 0)
+int ArtsProtocolTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numProtocols;
   uint32_t            protocolNum;
@@ -281,7 +281,7 @@
 //  
 //-------------------------------------------------------------------------
 ostream& ArtsProtocolTableData::write(ostream& os,
-                                      uint8_t version = 0) const
+                                      uint8_t version /* = 0 */) const
 {
   uint32_t            numProtocols;
   
@@ -306,7 +306,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsProtocolTableData::write(int fd, uint8_t version = 0) const
+int ArtsProtocolTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t      numProtocols;
   int           rc;
--- arts++-1-1-a9/classes/src/ArtsProtocolTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsProtocolTable.cc	Fri Feb 13 15:49:39 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsProtocolTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsProtocolTableAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsProtocolTableAggregatorMap.cc	Fri Feb 13 15:50:26 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsProtocolTableAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsPrimitive.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsPrimitive.cc	Fri Feb 13 15:55:08 2004
@@ -69,6 +69,8 @@
 
 #include "ArtsPrimitive.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -150,11 +152,11 @@
   switch (len) {
     case 1:
       val8 = value;
-      os.write(&val8,sizeof(val8));
+      os.write((char*)&val8,sizeof(val8));
       break;
     case 2:
       val16 = htons(value);
-      os.write(&val16,sizeof(val16));
+      os.write((char*)&val16,sizeof(val16));
       break;
     default:
       #ifdef ARTS_DEBUG_DO_ASSERTIONS
@@ -218,11 +220,11 @@
 
   switch (len) {
     case 1:
-      is.read(&val8,sizeof(val8));
+      is.read((char*)&val8,sizeof(val8));
       value = val8;
       break;
     case 2:
-      is.read(&val16,sizeof(val16));
+      is.read((char*)&val16,sizeof(val16));
       value = ntohs(val16);
       break;
     default:
@@ -289,23 +291,23 @@
   switch (len) {
     case 1:
       val8 = value;
-      os.write(&val8,sizeof(val8));
+      os.write((char*)&val8,sizeof(val8));
       break;
     case 2:
       val16 = value;
       val16 = htons(val16);
-      os.write(&val16,sizeof(val16));
+      os.write((char*)&val16,sizeof(val16));
       break;
     case 3:
       val8 = (value >> 16);
-      os.write(&val8,sizeof(val8));
+      os.write((char*)&val8,sizeof(val8));
       val16 = htons((value & 0x0000ffff));
-      os.write(&val16,sizeof(val16));
+      os.write((char*)&val16,sizeof(val16));
       break;
     case 4:
       val32 = value;
       val32 = htonl(value);
-      os.write(&val32,sizeof(val32));
+      os.write((char*)&val32,sizeof(val32));
       break;
     default:
       #ifdef ARTS_DEBUG_DO_ASSERTIONS
@@ -384,21 +386,21 @@
 
   switch (len) {
     case 1:
-      is.read(&val8,sizeof(val8));
+      is.read((char*)&val8,sizeof(val8));
       value = val8;
       break;
     case 2:
-      is.read(&val16,sizeof(val16));
+      is.read((char*)&val16,sizeof(val16));
       value = ntohs(val16);
       break;
     case 3:
-      is.read(&val8,sizeof(val8));
+      is.read((char*)&val8,sizeof(val8));
       value = ((uint32_t)val8) << 16;
-      is.read(&val16,sizeof(val16));
+      is.read((char*)&val16,sizeof(val16));
       value |= ntohs(val16);
       break;
     case 4:
-      is.read(&val32,sizeof(val32));
+      is.read((char*)&val32,sizeof(val32));
       value = ntohl(val32);
       break;
     default:
@@ -483,22 +485,22 @@
   switch (len) {
     case 1:
       val8 = value;
-      os.write(&val8,sizeof(val8));
+      os.write((char*)&val8,sizeof(val8));
       break;
     case 2:
       val16 = value;
       val16 = htons(val16);
-      os.write(&val16,sizeof(val16));
+      os.write((char*)&val16,sizeof(val16));
       break;
     case 4:
       valuePart[0] = value;
       valuePart[0] = htonl(value);
-      os.write(&valuePart[0],sizeof(uint32_t));
+      os.write((char*)&valuePart[0],sizeof(uint32_t));
       break;
     case 8:
       valuePart[0] = htonl(value >> 32);
       valuePart[1] = htonl(value & 0xffffffff);
-      os.write(valuePart,sizeof(valuePart));
+      os.write((char*)valuePart,sizeof(valuePart));
       break;
     default:
       #ifdef ARTS_DEBUG_DO_ASSERTIONS
@@ -575,19 +577,19 @@
 
   switch (len) {
     case 1:
-      is.read(&val8,sizeof(val8));
+      is.read((char*)&val8,sizeof(val8));
       value = val8;
       break;
     case 2:
-      is.read(&val16,sizeof(val16));
+      is.read((char*)&val16,sizeof(val16));
       value = ntohs(val16);
       break;
     case 4:
-      is.read(&valuePart[0],sizeof(uint32_t));
+      is.read((char*)&valuePart[0],sizeof(uint32_t));
       value = ntohl(valuePart[0]);
       break;
     case 8:
-      is.read(valuePart,sizeof(valuePart));
+      is.read((char*)valuePart,sizeof(valuePart));
       value = ((uint64_t)ntohl(valuePart[0])) << 32;
       value += ntohl(valuePart[1]);
       break;
@@ -667,24 +669,24 @@
   
   switch (len) {
     case 1:
-      is.read(&octet1,sizeof(octet1));
+      is.read((char*)&octet1,sizeof(octet1));
       value = htonl((ipv4addr_t)octet1 << 24);
       break;
     case 2:
-      is.read(&octet1,sizeof(octet1));
-      is.read(&octet2,sizeof(octet2));
+      is.read((char*)&octet1,sizeof(octet1));
+      is.read((char*)&octet2,sizeof(octet2));
       value = htonl(((ipv4addr_t)octet1 << 24) | ((ipv4addr_t)octet2 << 16));
       break;
     case 3:
-      is.read(&octet1,sizeof(octet1));
-      is.read(&octet2,sizeof(octet2));
-      is.read(&octet3,sizeof(octet3));
+      is.read((char*)&octet1,sizeof(octet1));
+      is.read((char*)&octet2,sizeof(octet2));
+      is.read((char*)&octet3,sizeof(octet3));
       value = htonl(((ipv4addr_t)octet1 << 24) |
                     ((ipv4addr_t)octet2 << 16) |
                     ((ipv4addr_t)octet3 << 8));
       break;
     case 4:
-      is.read(&ipAddr,sizeof(ipAddr));
+      is.read((char*)&ipAddr,sizeof(ipAddr));
       value = ipAddr;
       break;
     default:
@@ -766,26 +768,26 @@
   switch (len) {
     case 1:
       octet1 = ntohl(value) >> 24;
-      os.write(&octet1,sizeof(octet1));
+      os.write((char*)&octet1,sizeof(octet1));
       break;
     case 2:
       netaddr = ntohl(value);
       octet1 = (ipv4addr_t)(netaddr >> 24) & 0xff;
       octet2 = (ipv4addr_t)(netaddr >> 16) & 0xff;
-      os.write(&octet1,sizeof(octet1));
-      os.write(&octet2,sizeof(octet2));
+      os.write((char*)&octet1,sizeof(octet1));
+      os.write((char*)&octet2,sizeof(octet2));
       break;
     case 3:
       netaddr = ntohl(value);
       octet1 = (ipv4addr_t)(netaddr >> 24) & 0xff;
       octet2 = (ipv4addr_t)(netaddr >> 16) & 0xff;
       octet3 = (ipv4addr_t)(netaddr >> 8) & 0xff;
-      os.write(&octet1,sizeof(octet1));
-      os.write(&octet2,sizeof(octet2));
-      os.write(&octet3,sizeof(octet3));
+      os.write((char*)&octet1,sizeof(octet1));
+      os.write((char*)&octet2,sizeof(octet2));
+      os.write((char*)&octet3,sizeof(octet3));
       break;
     case 4:
-      os.write(&value,4);
+      os.write((char*)&value,4);
       break;
     default:
       #ifdef ARTS_DEBUG_DO_ASSERTIONS
--- arts++-1-1-a9/classes/src/ArtsRttTimeSeriesTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsRttTimeSeriesTableData.cc	Fri Feb 13 16:02:52 2004
@@ -61,6 +61,9 @@
 #include "ArtsRttTimeSeriesTableData.hh"
 #include "ArtsPrimitive.hh"
 
+#include <cassert>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
@@ -192,7 +195,7 @@
 ostream & ArtsRttTimeSeriesTableEntry::write(ostream & os,
                                              uint32_t timeBase,
                                              uint32_t prevSecsOffset,
-                                             uint8_t version = 0) const
+                                             uint8_t version /* = 0 */) const
 {
   uint8_t         rleFlags = 0;
   uint8_t         timestampSecsLength = 0;
@@ -217,7 +220,7 @@
 
   timestampUsecsLength = BytesNeededForUint32(this->_timestamp.tv_usec);
   rleFlags |= (timestampUsecsLength - 1);
-  os.write(&rleFlags,sizeof(rleFlags));
+  os.write((char*)&rleFlags,sizeof(rleFlags));
   if (rttLength > 0)
     g_ArtsLibInternal_Primitive.WriteUint32(os,this->_rtt,rttLength);
   if (timestampSecsLength > 0)
@@ -239,7 +242,7 @@
 int ArtsRttTimeSeriesTableEntry::write(int fd,
                                        uint32_t timeBase,
                                        uint32_t prevSecsOffset,
-                                       uint8_t version = 0) const
+                                       uint8_t version /* = 0 */) const
 {
   uint8_t         rleFlags = 0;
   uint8_t         timestampSecsLength = 0;
@@ -302,7 +305,7 @@
 //----------------------------------------------------------------------------
 uint32_t ArtsRttTimeSeriesTableEntry::Length(uint32_t timeBase,
                                              uint32_t prevSecsOffset,
-                                             uint8_t version = 0) const
+                                             uint8_t version /* = 0 */) const
 {
   uint32_t length = sizeof(uint8_t);  // always have rleFlags
   if (this->_rtt != k_droppedPacketRtt) {
@@ -330,13 +333,13 @@
 istream & ArtsRttTimeSeriesTableEntry::read(istream & is,
                                             uint32_t timeBase,
                                             uint32_t prevSecsOffset,
-                                            uint8_t version = 0)
+                                            uint8_t version /* = 0 */)
 {
   uint8_t         rleFlags = 0;
   uint8_t         timestampUsecsLength = 0;
   uint32_t        timeVal;
   
-  is.read(&rleFlags,sizeof(rleFlags));
+  is.read((char*)&rleFlags,sizeof(rleFlags));
 
   if (rleFlags & 0x80) {
     //  it's a dropped packet; RTT length is 0
@@ -374,7 +377,7 @@
 //----------------------------------------------------------------------------
 int ArtsRttTimeSeriesTableEntry::read(int fd, uint32_t timeBase,
                                       uint32_t prevSecsOffset,
-                                      uint8_t version = 0)
+                                      uint8_t version /* = 0 */)
 {
   uint8_t         rleFlags = 0;
   uint8_t         timestampUsecsLength = 0;
@@ -594,7 +597,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-istream & ArtsRttTimeSeriesTableData::read(istream& is, uint8_t version = 0)
+istream & ArtsRttTimeSeriesTableData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t numRttEntries, rttEntryNum;
   ArtsRttTimeSeriesTableEntry  rttEntry;
@@ -623,7 +626,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsRttTimeSeriesTableData::read(int fd, uint8_t version = 0)
+int ArtsRttTimeSeriesTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t numRttEntries, rttEntryNum;
   ArtsRttTimeSeriesTableEntry  rttEntry;
@@ -664,7 +667,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-uint32_t ArtsRttTimeSeriesTableData::Length(uint8_t version = 0) const
+uint32_t ArtsRttTimeSeriesTableData::Length(uint8_t version /* = 0 */) const
 {
   uint32_t    length = 0;
   uint32_t    rttEntryNum, numRttEntries;
@@ -693,7 +696,7 @@
 //  
 //----------------------------------------------------------------------------
 ostream & ArtsRttTimeSeriesTableData::write(ostream & os,
-                                            uint8_t version = 0) const
+                                            uint8_t version /* = 0 */) const
 {
   uint32_t             numRttEntries, rttEntryNum;
   uint32_t             rttUsecs;
@@ -729,7 +732,7 @@
 //............................................................................
 //  
 //----------------------------------------------------------------------------
-int ArtsRttTimeSeriesTableData::write(int fd, uint8_t version = 0) const
+int ArtsRttTimeSeriesTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t             numRttEntries, rttEntryNum;
   uint32_t             rttUsecs;
--- arts++-1-1-a9/classes/src/ArtsRttTimeSeriesTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsRttTimeSeriesTable.cc	Fri Feb 13 16:03:26 2004
@@ -44,6 +44,8 @@
 
 #include "ArtsRttTimeSeriesTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //----------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsSelectedPortTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsSelectedPortTableData.cc	Fri Feb 13 16:04:24 2004
@@ -188,7 +188,7 @@
 //  
 //-------------------------------------------------------------------------
 uint32_t
-ArtsSelectedPortTableData::ComputeLength(uint8_t version = 0) const
+ArtsSelectedPortTableData::ComputeLength(uint8_t version /* = 0 */) const
 {
   this->_length = 0;
   
@@ -214,7 +214,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsSelectedPortTableData::Length(uint8_t version = 0) const
+uint32_t ArtsSelectedPortTableData::Length(uint8_t version /* = 0 */) const
 {
   this->ComputeLength(version);
   return(this->_length);
@@ -227,7 +227,7 @@
 //  
 //-------------------------------------------------------------------------
 istream& ArtsSelectedPortTableData::read(istream& is,
-                                         uint8_t version = 0)
+                                         uint8_t version /* = 0 */)
 {
   uint32_t            numPorts;
   uint32_t            portNum;
@@ -251,7 +251,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsSelectedPortTableData::read(int fd, uint8_t version = 0)
+int ArtsSelectedPortTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numPorts;
   uint32_t            portNum;
@@ -298,7 +298,7 @@
 //  
 //-------------------------------------------------------------------------
 ostream& ArtsSelectedPortTableData::write(ostream& os,
-                                  uint8_t version = 0) const
+                                  uint8_t version /* = 0 */) const
 {
   uint32_t                                    numPorts;
   vector<ArtsPortTableEntry>::const_iterator  portEntry;
@@ -323,7 +323,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsSelectedPortTableData::write(int fd, uint8_t version = 0) const
+int ArtsSelectedPortTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t      numPorts;
   int           rc;
--- arts++-1-1-a9/classes/src/ArtsSelectedPortTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsSelectedPortTable.cc	Fri Feb 13 16:04:55 2004
@@ -44,6 +44,8 @@
 
 #include "ArtsSelectedPortTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsTimeIntervalSelectionSet.lex.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsTimeIntervalSelectionSet.lex	Fri Feb 13 16:06:05 2004
@@ -59,6 +59,8 @@
 
 #include "ArtsTimeIntervalSelectionSet.hh"
 
+using namespace std;
+
 static struct tm    g_Tm;
 static time_t       g_timeValue;
 %}
--- arts++-1-1-a9/classes/src/ArtsTosTableData.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsTosTableData.cc	Fri Feb 13 16:08:24 2004
@@ -47,6 +47,8 @@
 #include "ArtsPrimitive.hh"
 #include "ArtsTosTableData.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
@@ -166,7 +168,7 @@
 //-------------------------------------------------------------------------
 //   uint32_t ArtsTosTableEntry::Length(uint8_t version = 0) const
 //-------------------------------------------------------------------------
-uint32_t ArtsTosTableEntry::Length(uint8_t version = 0) const
+uint32_t ArtsTosTableEntry::Length(uint8_t version /* = 0 */) const
 {
   uint32_t  len = 0;
 
@@ -181,15 +183,15 @@
 //-------------------------------------------------------------------------
 // istream& ArtsTosTableEntry::read(istream& is, uint8_t version = 0)
 //-------------------------------------------------------------------------
-istream& ArtsTosTableEntry::read(istream& is, uint8_t version = 0)
+istream& ArtsTosTableEntry::read(istream& is, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
 
   //  tos number
-  is.read(&this->_tosNum,sizeof(this->_tosNum));
+  is.read((char*)&this->_tosNum,sizeof(this->_tosNum));
   
   //  descriptor
-  is.read(&this->_descriptor,sizeof(this->_descriptor));
+  is.read((char*)&this->_descriptor,sizeof(this->_descriptor));
 
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -205,7 +207,7 @@
 //-------------------------------------------------------------------------
 //      int ArtsTosTableEntry::read(int fd, uint8_t version = 0)
 //-------------------------------------------------------------------------
-int ArtsTosTableEntry::read(int fd, uint8_t version = 0)
+int ArtsTosTableEntry::read(int fd, uint8_t version /* = 0 */)
 {
   uint8_t  fieldLen;
   int      rc = 0;
@@ -236,15 +238,15 @@
 //                                           uint8_t version = 0) const
 //-------------------------------------------------------------------------
 ostream& ArtsTosTableEntry::write(ostream& os,
-                                       uint8_t version = 0) const
+                                       uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
 
   //  tos number
-  os.write(&this->_tosNum,sizeof(this->_tosNum));
+  os.write((char*)&this->_tosNum,sizeof(this->_tosNum));
   
   //  descriptor
-  os.write(&this->_descriptor,1);
+  os.write((char*)&this->_descriptor,1);
   
   //  pkts
   fieldLen = (this->_descriptor >> 3) + 1;
@@ -260,7 +262,7 @@
 //-------------------------------------------------------------------------
 //  int ArtsTosTableEntry::write(int fd, uint8_t version = 0) const
 //-------------------------------------------------------------------------
-int ArtsTosTableEntry::write(int fd, uint8_t version = 0) const
+int ArtsTosTableEntry::write(int fd, uint8_t version /* = 0 */) const
 {
   uint8_t  fieldLen;
   int      rc = 0;
@@ -482,7 +484,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsTosTableData::ComputeLength(uint8_t version = 0) const
+uint32_t ArtsTosTableData::ComputeLength(uint8_t version /* = 0 */) const
 {
   this->_length = 0;
   
@@ -505,7 +507,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-uint32_t ArtsTosTableData::Length(uint8_t version = 0) const
+uint32_t ArtsTosTableData::Length(uint8_t version /* = 0 */) const
 {
   this->ComputeLength(version);
   return(this->_length);
@@ -516,7 +518,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-istream& ArtsTosTableData::read(istream& is, uint8_t version = 0)
+istream& ArtsTosTableData::read(istream& is, uint8_t version /* = 0 */)
 {
   uint32_t            numToss;
   uint32_t            tosNum;
@@ -539,7 +541,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsTosTableData::read(int fd, uint8_t version = 0)
+int ArtsTosTableData::read(int fd, uint8_t version /* = 0 */)
 {
   uint32_t            numToss;
   uint32_t            tosNum;
@@ -581,7 +583,7 @@
 //  
 //-------------------------------------------------------------------------
 ostream& ArtsTosTableData::write(ostream& os,
-                                      uint8_t version = 0) const
+                                      uint8_t version /* = 0 */) const
 {
   uint32_t            numToss;
   
@@ -606,7 +608,7 @@
 //.........................................................................
 //  
 //-------------------------------------------------------------------------
-int ArtsTosTableData::write(int fd, uint8_t version = 0) const
+int ArtsTosTableData::write(int fd, uint8_t version /* = 0 */) const
 {
   uint32_t      numToss;
   int           rc;
--- arts++-1-1-a9/classes/src/ArtsTosTable.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsTosTable.cc	Fri Feb 13 16:11:15 2004
@@ -45,6 +45,8 @@
 #include "Arts.hh"
 #include "ArtsTosTable.hh"
 
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
--- arts++-1-1-a9/classes/src/ArtsTosTableAggregatorMap.cc.orig	Sat Nov 16 01:46:42 2002
+++ arts++-1-1-a9/classes/src/ArtsTosTableAggregatorMap.cc	Fri Feb 13 16:13:41 2004
@@ -53,6 +53,9 @@
 
 #include "ArtsTosTableAggregatorMap.hh"
 
+#include <iterator>
+using namespace std;
+
 static const string rcsid = "@(#) $Name$ $Id$";
 
 //-------------------------------------------------------------------------
